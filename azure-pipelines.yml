trigger:
  branches:
    include:
      - main
      - develop

pr:
  branches:
    include:
      - main
      - develop
  drafts: false

variables:
  environmentName: 'team-up-dev'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Building
    pool:
      vmImage: $(vmImageName)

    steps:
      - script: npm ci
        displayName: 'Installing Dependencies'

      - script: npm run lint:fix
        displayName: 'Linting'

      - script: npm test -- --ci --watchAll=false --passWithNoTests
        displayName: 'Running Unit Test'

      - script: npm run build-prod
        displayName: 'Building React webApp'

      - task: ArchiveFiles@2
        displayName: 'Zipping files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true

      - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        displayName: Publishing
        artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploying
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: Deploying
            inputs:
              appName: 'team-up-dev' 
              azureSubscription: 'devlevel3-dev (a797242d-ce60-41aa-98ca-2e22d5221cfe)'
              appType: 'webAppLinux'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'NODE|14-lts'
              startUpCommand: 'npm install -g serve && serve -n -l 8080'
    
          - task: CmdLine@2
            displayName: 'Request to WebApp'
            inputs:
              script: |
                response=$(curl --write-out '%{http_code}' --silent --output /dev/null http://team-up-dev.azurewebsites.net)
                echo HTTP code: $response
