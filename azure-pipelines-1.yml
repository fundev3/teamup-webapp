# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'devlevel3-dev (a797242d-ce60-41aa-98ca-2e22d5221cfe)'

  # Web app name
  # webAppName: 'app-tuweb-dev2-bra'

  # Environment name
  # environmentName: 'team-up-dev'

  # Agent VM image name
  # vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - script: npm ci
      displayName: 'Install Dependencies'

    - script: npm run lint:fix
      displayName: 'Linting'

    - script: npm test -- --ci --watchAll=false --passWithNoTests
      displayName: 'Running Unit Test'

    - script: npm run build
      displayName: 'Build React webApp'
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Agent.BuildDirectory)/s/build'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Agent.BuildDirectory)/s/build/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Save Artifact'
      inputs:
        PathtoPublish: '$(Agent.BuildDirectory)/s/build/$(Build.BuildId).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'team-up-dev'
    pool:
      vmImage: 'ubuntu-latest'
      steps:
      - task: DownloadPipelineArtifact@2
        displayName: 'Dowload artifact'
        inputs:
          buildType: 'current'
          itemPattern: 'drop/$(Build.BuildId).zip'
          targetPath: '$(System.ArtifactsDirectory)'

      - task:  AzureWebApp@1
        displayName: 'Azure App Service'
        inputs:
          azureSubscription: 'devlevel3-dev (a797242d-ce60-41aa-98ca-2e22d5221cfe)'
          appType: webAppLinux
          WebAppName: 'team-up-dev'
          package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
          RuntimeStack: 'NODE|14-lts'
          # startUpCommand: 'npm install -g serve && npm run build-prod'
          startUpCommand: 'npm install -g serve && npm run serve-clean'

      # - task: CmdLine@2
      #   displayName: 'Request WebApp'
      #   inputs:
      #     script: |
      #       response=$(curl --write-out '%{http_code}' --silent --output /dev/null https://app-tuweb-dev2-bra.azurewebsites.net)
      #       echo HTTP code: $response
          